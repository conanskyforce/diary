// 单例模式
var foo = (function CoolModule(id) {
	function change() {
		// 修改公共 API
		publicAPI.identify = identify2;
	}
	function identify1() {
		console.log( id );
	}
	function identify2() {
		console.log( id.toUpperCase() );
	}
	var publicAPI = {
		change: change,
		identify: identify1
	};
	return publicAPI;
})( "foo module" );

foo.identify(); // foo module
foo.change();
foo.identify(); // FOO MODULE

// 现代模块管理机制
var MyModules = (function Manager(){
	var modules = {};

	function define(name,deps,impl){
		for(var i=0;i<deps.length;i++){
			deps[i] = modules[deps[i]];
		}
		modules[name] = impl.apply(impl,deps);
	}
	function get(name){
		return modules[name];
	}
	return {
		define:define,
		get:get
	};
})();

MyModules.define("bar",[],function(){
	function hello(who){
		return "Let me introduce: " + who;
	}
	return {
		hello:hello
	};
});

MyModules.define("foo",["bar"],function(bar){
	var hungry = "hippo";

	function awesome(){
		console.log(bar.hello(hungry).toUpperCase());
	}
	return {
		awesome:awesome
	};
});

var bar =MyModules.get("bar");
var foo =MyModules.get("foo");

console.log(bar.hello("hippo"));//Let me introduce: hippo
foo.awesome(); // LET ME INTRODUCE: HIPPO

// ES6模块加载机制

// bar.js
	function hello(who) {
			return "Let me introduce: " + who;
		}
	export hello;

// foo.js
// 仅从 "bar" 模块导入 hello()
	import hello from "bar";
	var hungry = "hippo";
	function awesome() {
		console.log(
			hello( hungry ).toUpperCase()
		);
	}
	export awesome;

// baz.js
	// 导入完整的 "foo" 和 "bar" 模块
	module foo from "foo";
	module bar from "bar";
	console.log(
		bar.hello( "rhino" )
	); // Let me introduce: rhino
	foo.awesome(); // LET ME INTRODUCE: HIPPO

// 词法作用域和

function foo() {
	console.log( a ); // 2
}
function bar() {
	var a = 3;
	foo();
}
var a = 2;	
bar();


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































