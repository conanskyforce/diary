一个0或1我们成为一个bit(比特,位) 
8个bits为1 byte(字节)
1K = 1024 Bytes
1G = 1024*1024*1024 Bytes

CPU指令周期经常使用MHz或者GHz，这个Hz代笔秒分之一

一般消费者的计算机都是x86的CISI构架

频率就是CPU每秒钟可以进行的工作次数

外频(CPU与外部组件进行数据传输的速度)*倍频(提升内部工作能效的一个倍数)=CPU频率

数据表示方式

在linux系统中，每个装置都被当成一个文件夹来对待

几乎所有的硬件装置都在/dev目录

/dev/sd[a-p]硬盘,usb磁盘

/dev/vd[a-p]虚拟磁盘

MSDOS(MBR)开机管理程序记录区与分区表一般放在磁盘第一扇区
这个扇区通常512bytes
包括两个数据
MBR:446bytes
分区表:64bytes(只能写入4个主要分区)

dev/sda1
dev/sda2
dev/sda5//扩展分区，1-4留给主要分区
dev/sda6

MBR分区表的限制

系统无法抓取2.2T以上的磁盘容量
MBR仅有一个区块，被破坏后很难保证数据的安全性
MBR开机管理程序仅446bytes,无法容纳较多程序代码

所有就有了GPT分区的出现

CMOS是记录各项硬件参数且嵌入主板上边的储存器
BIOS是一个写入到主板的一个软件
BIOS就是开机时候，计算机主动执行的第一个程序
BIOS到硬盘读取第一个扇区MBR位置里边的开机管理程序
（boot loader）这个程序目的是加载核心文件

挂载：利用一个目录当成进入点，将磁盘分区槽的数据房子在该目录下，进入该目录就是进入该分区槽

稍微专业一点的分区方式
/boot
/
/home
/var
swap

俩个实际案例关于磁盘分配规划

案例一：家用的小型 Linux  服务器，IP  分享与文件分享中心：
提供服务：
提供家里的多部计算机的网络联机分享，所以需要NAT功能。提供家庭成员的数据存放容量，由于家里使用Windows系统的成员不少，所以建置SAMBA服务器，提供网芳的网络驱动器功能。
主机硬件配备：
o  CPU 使用 AMD Athlon 4850e 省电型 CPU
o  内存大小为 4GB
o  两张网络卡，控制芯片为常见的螃蟹卡(Realtek)
o  只有一颗 640GB 的磁盘
o  显示适配器为 CPU 内的内建显卡 (Radeon HD 3200)
o  安装完毕后将屏幕,键盘,鼠标,DVD-ROM 等配备均移除，仅剩下网络线与电源线。
硬盘分区：
o  分成 /, /usr, /var, /tmp 等目录均独立；
o  1 GB 的 Swap；
o  安装比较过时的 CentOS 5.x 最新版

案例二：提供 Linux  的 PC  丛集(Cluster)计算机集群

提供服务：
	提供研究室成员对于模式仿真的软、硬件平台，主要提供的服务并非因特网服务，而是研究室内部的研究
	工作分析。
主机硬件配备：
	o  利用两部多核系统处理器 (一部 20 核 40 绪，一部 12 核 24 绪)，搭配 10G 网卡组合而成
	o  使用内建的显示适配器
	o  运算用主机仅一颗磁盘，储存用主机提供 8 颗 2TB 磁盘组成的磁盘阵列
	o  一部 128GB 内存，一部 96GB 内存
硬盘分区：
	o  运算主机方面，整颗磁盘仅分 /boot, / 及 swap 而已
	o  储存主机方面，磁盘阵列分成两颗磁盘，一颗 100G 给系统用，一颗 12T 给数据用。系统磁盘用
	的分区为 /boot, /, /home, /tmp, /var 等分区， 数据磁盘全部容量规划在同一个分区槽而已。
	o  安装最新的 CentOS 7.x 版

使用分区表装cenos7
tab键输入
inst.gpt

Linux 预设的情况下会提供六个
Terminal 来让使用者登入， 切换的方式为使用：[Ctrl] + [Alt] + [F1]~[F6]的组合按键

date +%Y/%m/%d 显示年月日
cal [month] [year] 显示日历
bc 计算器 scale设置小数点位数

ctrl+c 中断程序
ctrl-d 表示End Of File 退出文字借口(exit)
[shift]+{[PageUP]|[Page Down]} 前后翻页

学习怎么快速学习，是个很必要的过程。
command --help 指定帮助
man command 帮助文档

nano 文本编辑器
su - 切换到root用户
sync 同步磁盘

shutdown -r 系统服务停掉之后重启
shutdown -h 系统服务停掉之后关机
shutdown -h now 你可管机
shutdown -h +30 30分钟后关机
shutdown -r +30 'will reboot 30minutes' 提示30分钟后重启

p211页

-rw-r--r--
 -文件d目录l软链接
 u所有者g所属组o其他人
 r读w写x执行

查询目录内容
ls [选项] [文件或目录]
-a 显示所有文件
-l 显示详细信息
-d 显示目录行
-h 人性化
-i 显示inode

mkdir dir 创建目录
mkdir -p dir1/dir2 递归创建目录
rm -rf 强制递归删除文件目录
cp -a orindir todir 递归复制目录连带复制属性
mv oridir todir 剪切或改名
touch file 创建文件
ctrl+l xshell 清屏

pwd 显示当前所在目录

ln -s oridir todir 软链接到新目录,就是windows的快捷方式
ln orifile tofile 硬链接文件,互相引用，通过inode信息区分

文件搜索
1.locate
locate 文件名
locate命令默认在/var/lib/mlocate 中的数据库搜索，每天更新一次
updatedb 手动更新数据库
只能搜索文件名
locate搜索配置文件
/etc/updatedb.conf
PRUNE_BIND_MOUNTS = "yes"
#开启搜索限制
PRUNEFS =
#不搜索的文件系统
PRUNEPATHS =
#不搜索的文件路径
2.whereis 与 which
搜索命令程序在哪里
whereis 命令名
-b 只看执行文件
-m 只看帮助文件
whereis locate
locate: /usr/bin/locate /usr/share/man/man1/locate.1.gz
whereis ls
ls: /bin/ls /usr/share/man/man1/ls.1.gz /usr/share/man/man1p/ls.1p.gz
which ls 能看到别名
alias ls='ls --color=auto'
	/bin/ls
which locate
/usr/bin/locate

环境变量$PATH，这些目录里边的程序可以直接用程序名执行，就不用加上目录了
echo $PATH

3.find
find [范围] [搜索条件]
find / -iname install.log 按文件名搜索确定文件名,加i不区分大小写
*匹配任意文件
?单独字符
[]括号内任意一个
find / -user root 按所有者搜索
find / -nouser 搜索没有所有者的文件
find / -mtime +10 10天前修改的文件
mtime 修改时间
ctime 创建时间
atime 访问时间
find / -size +25k 按大小搜索
find / -size +25M
find / -inum inode 按inode节点信息搜索
4.grep
grep [选项] 字符串 文件名
grep -i 'a' install 文件中搜索字符串

linux 6.1 压缩命令

yum命令
yum list 搜索yum源可以安装的包
yum search 关键字 搜索关键字的包
yum -y install 包名(自动回答yes)

升级
yum -y update 自动回答升级
卸载
yum -y remove 包名

ps命令
ps -aux 显示所有包含其他使用的进程
ps -ef 显示当前所有进程环境变量及进程间关系
ps -A 显示当前所有进程
ps -aux | grep apache 查找某进程

kill命令
kill -9 $(ps -ef|grep pro1) 找到pro1进程然后强制结束该进程

df 命令
df -l 显示磁盘使用情况
de -haT 显示磁盘文件系统及使用情况

du命令，查看的是文件夹或磁盘
du -l dir

free命令，查看内存使用情况
free 显示内存使用情况以K为单位

linux文件组
linux文件中任何一个文件都有[user group others]三种身份的个别权限
账号信息，root信息都记录在/etc/passwd文件内
个人密码记录在/etc/shadow文件中
组记录在/etc/group中

su - 切换root用户
ls -alh 显示所有文件详细信息

chgrp 改变文件所属组
chgrp -R newgrp file/dir 递归改变所属组为newgrp
chown 改变文件拥有者
chown -R newowner file/dir 递归改变文件拥有者
chown [- R]  账号名称 文件 或目录
chown [- R]  账号名称:组名 文件或目录
chmod 改变文件权限

实际系统运行中最常发生的一个问题就是我们以vim编辑一个shell的文字批处理文件后，他的权限通常是 -rw-rw-r-- 也就，如果要将该文件变成可执行文件并且不让其他人修改此文件的话，就需要 -rwxr-xr-x 这样的权限，此时就得下达 chmod 755 testsh 指令咯

x 对于目录来说，决定了能不能cd进这个目录哦
w 对于目录来说，决定了能否增删改目录下的文件或文件夹哦，即使目录下的文件或文件夹用户没有任何权限！！
r 对于目录来说，表示能否读到这个目录，比如ls
对于文件来说，不能决定能否删除自己，这个由上层文件夹决定

linux的文件种类
##一般文件
第一个属性为-
1.纯文本文档
cat ~./bashrc

2.二进制文件,一般的可执行文件

3.数据格式文件

##目录
第一个属性为d

#链接
第一个属性为l

##设备与装置文件
通常都在/dev目录下
一般分为两种
b 区块设备
c 字符设备文件

##资料接口文件
第一个属性为 s 用作数据承接

##数据输送文件
第一个属性为 p FIFO 队列?

常用可执行文件扩展名

*.sh 脚本或批处理文件，一般用shell写的，所以缩写.sh

*Z,*.tar.gz,*.zip,*.tgz:经过打包的压缩文件

*.html,*.php 网页相关文件

/usr 软件放置处
/opt 第三方协作软件
/etc 配置文件
/boot 开机与核心文件
/var 系统运作过程有关

p244
#文件与目录管理

绝对路径：由根目录写起
相对路径：相对于目前公主目录的路径，上一层用../,当前路径用./

. 当前目录
.. 上一层目录
- 前一个工作目录
~ 当前用户的家目录
~account account用户的家目录

cd 切换目录
pwd 显示当前目录
mkdir 建立新目录
rmdir 删除空目录
rm -r dir 递归删除目录
du -sh 人性化显示显示目录占用空间大小
du -ash 还要显示目录下文件大小

echo $PATH 显示环境变量
加入目录到环境变量PATH中去！
PATH="${PATH}:/dir"

cp -a 连同属性一起复制
cp -l 硬链接
cp -s 软连接(快捷方式)

basename 文件名
dirname 路径名

文件查阅
cat -nb 从第一行开始显示文件内容(加上行号)
tac 从最后一行开始显示
nl 显示的时候输出行号
more 一页一页的显示(空格:向下一页,enter:向下一行,/字符串:向下搜索这个关键字,:f : 显示文件名及目前显示的行数,q:离开,b:往回翻页)
less 与more类似，但可以往前翻页(pagedown,pageup前后翻页,/字符串 向下搜寻字符串,/?向上搜寻字符串,n 重复前一个搜寻,N 反向搜寻,g 第一行,G 最后一行)
head -n 只看头几行(默认10行,可以设置)
tail -n 只看尾巴几行(默认10行,可以设置)
od 二进制方式读取文件内容

touch 建立一个空文件,或修改某个文件的日期(mtime和atime)

文件预设权限 ：umask
新建文件默认没有x权限
默认umask 0022
新建文件权限为
-rw-r--r--
drwxr-xr-x
修改umask 0002 后
-rw-rw-r--
drwxrwxr-x

如果umask为003
-rw-rw-r--
drwxrwxr--

一般用户的umask默认为002，即保留通群组的写入权利

文件隐藏属性
chattr +i file 修改属性(+i 根本无法改动,包括root!)
+a 只能增加数据，不能减少数据

lsattr file 查看属性

文件特殊权限
SUID,SGID,SBIT
SUID:binary program 临时获得 root权限(s在文件拥有者哪项,一般针对文件)
SGID:(s在群组权限,可以针对文件和目录)
 
SUID/SGID/SBIT 权限设定

4 为 SUID 
2 为 SGID
1 为 SBIT

file 判断文件为什么基本格式












































































































































































