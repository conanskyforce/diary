一个0或1我们成为一个bit(比特,位) 
8个bits为1 byte(字节)
1K = 1024 Bytes
1G = 1024*1024*1024 Bytes

CPU指令周期经常使用MHz或者GHz，这个Hz代笔秒分之一

一般消费者的计算机都是x86的CISI构架

频率就是CPU每秒钟可以进行的工作次数

外频(CPU与外部组件进行数据传输的速度)*倍频(提升内部工作能效的一个倍数)=CPU频率

数据表示方式

在linux系统中，每个装置都被当成一个文件夹来对待

几乎所有的硬件装置都在/dev目录

/dev/sd[a-p]硬盘,usb磁盘

/dev/vd[a-p]虚拟磁盘

MSDOS(MBR)开机管理程序记录区与分区表一般放在磁盘第一扇区
这个扇区通常512bytes
包括两个数据
MBR:446bytes
分区表:64bytes(只能写入4个主要分区)

dev/sda1
dev/sda2
dev/sda5//扩展分区，1-4留给主要分区
dev/sda6

MBR分区表的限制

系统无法抓取2.2T以上的磁盘容量
MBR仅有一个区块，被破坏后很难保证数据的安全性
MBR开机管理程序仅446bytes,无法容纳较多程序代码

所有就有了GPT分区的出现

CMOS是记录各项硬件参数且嵌入主板上边的储存器
BIOS是一个写入到主板的一个软件
BIOS就是开机时候，计算机主动执行的第一个程序
BIOS到硬盘读取第一个扇区MBR位置里边的开机管理程序
（boot loader）这个程序目的是加载核心文件

挂载：利用一个目录当成进入点，将磁盘分区槽的数据房子在该目录下，进入该目录就是进入该分区槽

稍微专业一点的分区方式
/boot
/
/home
/var
swap

俩个实际案例关于磁盘分配规划

案例一：家用的小型 Linux  服务器，IP  分享与文件分享中心：
提供服务：
提供家里的多部计算机的网络联机分享，所以需要NAT功能。提供家庭成员的数据存放容量，由于家里使用Windows系统的成员不少，所以建置SAMBA服务器，提供网芳的网络驱动器功能。
主机硬件配备：
o  CPU 使用 AMD Athlon 4850e 省电型 CPU
o  内存大小为 4GB
o  两张网络卡，控制芯片为常见的螃蟹卡(Realtek)
o  只有一颗 640GB 的磁盘
o  显示适配器为 CPU 内的内建显卡 (Radeon HD 3200)
o  安装完毕后将屏幕,键盘,鼠标,DVD-ROM 等配备均移除，仅剩下网络线与电源线。
硬盘分区：
o  分成 /, /usr, /var, /tmp 等目录均独立；
o  1 GB 的 Swap；
o  安装比较过时的 CentOS 5.x 最新版

案例二：提供 Linux  的 PC  丛集(Cluster)计算机集群

提供服务：
	提供研究室成员对于模式仿真的软、硬件平台，主要提供的服务并非因特网服务，而是研究室内部的研究
	工作分析。
主机硬件配备：
	o  利用两部多核系统处理器 (一部 20 核 40 绪，一部 12 核 24 绪)，搭配 10G 网卡组合而成
	o  使用内建的显示适配器
	o  运算用主机仅一颗磁盘，储存用主机提供 8 颗 2TB 磁盘组成的磁盘阵列
	o  一部 128GB 内存，一部 96GB 内存
硬盘分区：
	o  运算主机方面，整颗磁盘仅分 /boot, / 及 swap 而已
	o  储存主机方面，磁盘阵列分成两颗磁盘，一颗 100G 给系统用，一颗 12T 给数据用。系统磁盘用
	的分区为 /boot, /, /home, /tmp, /var 等分区， 数据磁盘全部容量规划在同一个分区槽而已。
	o  安装最新的 CentOS 7.x 版

使用分区表装cenos7
tab键输入
inst.gpt

Linux 预设的情况下会提供六个
Terminal 来让使用者登入， 切换的方式为使用：[Ctrl] + [Alt] + [F1]~[F6]的组合按键

date +%Y/%m/%d 显示年月日
cal [month] [year] 显示日历
bc 计算器 scale设置小数点位数

ctrl+c 中断程序
ctrl-d 表示End Of File 退出文字借口(exit)
[shift]+{[PageUP]|[Page Down]} 前后翻页

学习怎么快速学习，是个很必要的过程。
command --help 指定帮助
man command 帮助文档

nano 文本编辑器






































































































































































































































